/*
*****************************************************************************
                        Assignment 1 - Milestone 3
Full Name  : Kuldeepsinh Sandipsinh Mahida
Student ID#: 167547215
Email      : kmahida1@myseneca.ca
Section    : NGG

Authenticity Declaration:
I declare this submission is the result of my own work and has not been
shared with any other student or 3rd party content provider. This submitted
piece of work is entirely of my own creation.
*****************************************************************************
*/
Answer 1
void checkLeapYear(struct Date* );
is used to check if the year entered is leap year if yes then we let the february heve 29 days
the addAppointment function was very compolex and if we add other complexity like checking whether the year is
a leap year or not or any other complex things then the code would become almost impossible to understand evn for the 
coder himself hence this function plays important role of reducing complexity.

void searchPatientByPatientNumber(const struct Patient patient[], int max);
it is very useful function when we see it in terms of usability most of the time there could be error in spellings 
or other sort of stuffs but if you ented the patient number then it is going to give you hundred percent correct result 
as per the rquirements.
has no return type the required result is printed and calculated in the function itself and the function takes arguments
that are int max and user defined data type.
it takes patient number and returns us all the details of the patient.

void addAppointment(struct Appointment*, int, struct Patient*, int);
this function is used to add new appointments for the patients this will first check if the year is leap year if no then no february 29
we check if is there a vacant appointment available in open hours of clinic and give appointments as per the the meeting duration.
it is a void function which means no return type. and take user defined structs which helps it with date patients entry details.

Answer 2
addAppointment function took me about 77 lines wheres these numbers could have been numerous if i would not have used functions 
and data representation.
like if we do not have appointments available we do not even go and check other stuffs.
then i added the function which checks if the year entered is leap year if it is then we also let them enter 29 feb.
however whereever there is a loop it means there is pattern which is recognized and we use nested loop which itself shows we
have drastically reduced the code size or else we would have to write very big file but the nested do while loop makes the code much smaller.
and in the 2 do while we have for loop which shows that there are pattern recognized and used to reduce complxity.

Answer 3 
time management was one of the bigger issue with this milestones the major reason being it dealt with 
a lot functions and everything is interlinked and a mistake at one place meant you will encounter that mistake
a lot more times then ussual. however a lotyt of concepts were used all together in the code making it very  
hard, because we had to deal with functions, arrays, string, pointers and structreres all these were new topics hence 
we need more time to implement the new topics whereas the topice which are old we do not need to think twice.
three biggest reason why i felt i am short of time were in the first milestone the code would not run on visual studio
whereas run perfectly fine on online c compiler and even got submitted on matrix but as we know coding on website is
not as easy as in visual studio however, i was able to complete the code before the end of the deadline.

while performing second milestone we were required to use milestone 1 but as i mentioned the code was showing
error in visual studio and i am only comfortable with visual studio i had to start from scratch and make a new core.c file
this time it would run correctly and print required output but just at one place there was a extra line and to remove it 
i had to invest a lot of time in it causing me to submit my assignment late. however i planned this timee that i am going to 
completely understand the code before hand then would make a pseudo code on monday later on try to take two convert pseudo code
to real code by thursday i would have a code which would give a similar output with some or no errors which i had to debug by friday
and give a whole day to the reflection as it is more important in terms of marks weightage so i need to make sure that i have enough 
time for making the reflection of the program. and lastly if something takes more time then planned then i have sunday as a control
to complete tasks which takes more time then planned.

while writing code the biggest problems i faced was with dealing strings as the output was often uncertain.
two place where i had probelms were when we needed to enter y or n in remove patient but it also getting completed by yes which it 
should not have got completed from.
and there was a error in exiting the the system even after entering 0 the code would start again from beginning however this got fixed
quite quickly but the yes no problem was very prsistent.
even the part where we were just supposed to take integer in input the very first function was very tricky but was solved eventually
by seeing the flowchart provided in the pdf.